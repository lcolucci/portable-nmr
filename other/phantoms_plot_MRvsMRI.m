%% Generate Scatter Plot of MR vs MRI Results for 6 Phantoms 
%  Summary of MRI pixel-by-pixel results is generated by script: phantoms_visualize_MRIvsMRsensorExperiment.m
%  Table is aggregated in excel file: Thesis/Figures/MRIvsMR_Phantoms/MultiExp/summary.xlsx
%  Table is then imported in here to generate the nice plot and save
%
%  Vertical (NMR sensor): value +/- error bars represent the 95% confidence interval for the fit. 
%  Horizontal (MRI): mean +/- error bars represent the standard deviation of the MRI pixel-by-pixel results. 


clear, close all

%% ---- USER INPUTS -----
excelFilePath = '/Users/linacolucci/Documents/Thesis/Thesis/Figures/MRIvsMR_Phantoms/MultiExp/summary.xlsx';
savePath = '/Users/linacolucci/Documents/Thesis/Paper/figures/Phantoms'; 
%% ----------------------

%% Import MR vs MRI Phantom Data 
% Import 
[~, ~, raw] = xlsread(excelFilePath,'Plot'); 
raw = raw(40:51,1:6);
stringVectors = string(raw(:,1));
stringVectors(ismissing(stringVectors)) = '';
raw = raw(:,[2,3,4,5,6]);

% Create output variable
data1 = reshape([raw{:}],size(raw));

% Create table
data = table;

% Allocate imported array to column variable names
data.Sample = stringVectors(:,1);
data.NMR_Value = data1(:,1);
data.NMR_95CI = data1(:,2);
data.NMR_r2 = data1(:,3);
data.MRI_Value = data1(:,4);
data.MRI_Std = data1(:,5);

% Clear temporary variables
clearvars data1 raw stringVectors;


%% Plot
figure; 
plot(data.MRI_Value, data.NMR_Value,'ko','MarkerSize',12,'MarkerFaceColor','k')
l = lsline; l.LineWidth = 2; hold on
errorbar(data.MRI_Value, data.NMR_Value, data.NMR_95CI, 'ko','LineStyle','none','MarkerSize',10,'MarkerFaceColor','k','Color','k','LineWidth',1);
hold on; 
errorbar(data.MRI_Value, data.NMR_Value, data.MRI_Std,'horizontal','LineStyle','none','Color','k','LineWidth',1);
lsline
xlabel({'MRI Pixel-by-Pixel', 'T2 Relaxation Time (ms)'})
ylabel({'NMR Sensor','T2 Relaxation Time (ms)'})
set(gca, 'linewidth',2,'XColor','k','YColor','k','FontSize',20); box off
set(gcf,'Color','w')
text(160,125,sprintf('r^2=%.3f',rsquared(data.MRI_Value, data.NMR_Value)),'FontSize',20)
xlim([0 250])
ylim([0 250])

%% Save
saveas(gcf, fullfile(savePath, 'supplemental_phantoms_MRI_vs_NMRsensor.eps'),'epsc')

